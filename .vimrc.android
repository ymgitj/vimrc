set nocompatible

syntax enable

set t_Co=256

set background=dark

colo elflord                      "设置"

syntax on                           "开起语法高亮"

set mouse=a

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

let g:iswindows = 0

let g:islinux = 0

if(has("win32") || has("win64") || has("win95") || has("win16"))

    let g:iswindows = 1

else

    let g:islinux = 1

endif



" -----------------------------------------------------------------------------

"  < 判断是终端还是 Gvim >

" -----------------------------------------------------------------------------

if has("gui_running")

    let g:isGUI = 1

else

    let g:isGUI = 0

endif



filetype off

if g:islinux

    set rtp+=/sdcard/1CommonFile/.vim/bundle/Vundle.vim

    call vundle#begin('/sdcard/1CommonFile/.vim/bundle')

else

    set rtp+=$VIM/vimfiles/bundle/Vundle.vim

    call vundle#begin('$VIM/vimfiles/bundle')    

endif

"""""""""""""""""""""""""""""""

" 让vundle管理插件版本,必须

Plugin 'VundleVim/Vundle.vim'

"Plugin 'ervandew/supertab'



" Trigger configuration. Do not use <tab> if you use https://github.com/Valloric/YouCompleteMe.

"let g:UltiSnipsExpandTrigger="<tab>"

"let g:UltiSnipsJumpForwardTrigger="<c-b>"

"let g:UltiSnipsJumpBackwardTrigger="<c-z>"

"

"" If you want :UltiSnipsEdit to split your window.

"let g:UltiSnipsEditSplit="vertical"





" 以下范例用来支持不同格式的插件安装.

" 请将安装插件的命令放在vundle#begin和vundle#end之间.

" Github上的插件

" 格式为 Plugin '用户名/插件仓库名'

"Plugin 'tpope/vim-fugitive'

" 来自 http://vim-scripts.org/vim/scripts.html 的插件

" Plugin '插件名称' 实际上是 Plugin 'vim-scripts/插件仓库名' 只是此处的用户名可以省略

Plugin 'L9'

" 由Git支持但不再github上的插件仓库 Plugin 'git clone 后面的地址'

Plugin 'git://git.wincent.com/command-t.git'

" 本地的Git仓库(例如自己的插件) Plugin 'file:///+本地插件仓库绝对路径'

"Plugin 'file:///home/gmarik/path/to/plugin'

" 插件在仓库的子目录中.

" 正确指定路径用以设置runtimepath. 以下范例插件在sparkup/vim目录下

Plugin 'rstacruz/sparkup', {'rtp': 'vim/'}

" 安装L9，如果已经安装过这个插件，可利用以下格式避免命名冲突

"Plugin 'ascenator/L9', {'name': 'newL9'}

"--------------------------------------------------------

Plugin 'sirver/ultisnips'

Plugin 'honza/vim-snippets'

Plugin 'mattn/emmet-vim'

"-------------------------------

Plugin 'Yggdroot/indentLine'

Plugin 'vim-airline'    

"-------------------------------

Plugin 'scrooloose/syntastic'

Plugin 'scrooloose/nerdcommenter'

Plugin 'scrooloose/nerdtree'

"-------------------------------

Plugin 'Raimondi/delimitMate'

Plugin 'Shougo/neocomplcache.vim'

Plugin 'danro/rename.vim'

"-------------------------------

Plugin 'junegunn/vim-plug'

"Plugin 'majutsushi/tagbar'

"-------------------------------------------------------

"Plugin 'vim-scripts/ctags.vim'

"Plugin 'ccvext.vim'

"-------------------------------------------------------

"Plugin 'christoomey/vim-run-interactive'

"Plugin 'croaky/vim-colors-github'

"Plugin 'kchmck/vim-coffee-script'

"Plugin 'kien/ctrlp.vim'

"Plugin 'pbrisbin/vim-mkdir'

"Plugin 'slim-template/vim-slim'

"Plugin 'thoughtbot/vim-rspec'

"Plugin 'tpope/vim-bundler'

"Plugin 'tpope/vim-endwise'

"Plugin 'tpope/vim-fugitive'

"Plugin 'tpope/vim-rails'

"Plugin 'tpope/vim-surround'

"Plugin 'vim-ruby/vim-ruby'

"Plugin 'vim-scripts/matchit.zip'

"Plugin 'vim-scripts/tComment'

"Plugin 'godlygeek/tabular'

"Plugin 'jelera/vim-javascript-syntax'

"Plugin 'altercation/vim-colors-solarized'

"Plugin 'othree/html5.vim'

"Plugin 'xsbeats/vim-blade'

"Plugin 'groenewege/vim-less'

"Plugin 'Lokaltog/vim-easymotion'

"Plugin 'klen/python-mode'

""""""""""""""""""""""""""""""""""""""""""""""""""""""

"Plugin 'a.vim'

"Plugin 'Align'

"Plugin 'jiangmiao/auto-pairs'

"Plugin 'bufexplorer.zip'

"Plugin 'cSyntaxAfter'

"Plugin 'Mark--Karkat'

"Plugin 'OmniCppComplete'

"Plugin 'repeat.vim'

"Plugin 'wesleyche/SrcExpl'

"Plugin 'std_c.zip'

"Plugin 'TxtBrowser'

"Plugin 'ZoomWin'

"---------------------------



call vundle#end()            " 必须

filetype plugin indent on    " 必须 加载vim自带和插件相应的语法和文件类型相关脚本

"---------------------------------------

"solve emmet problem

"--------------------
"
"call plug#begin('$VIM/vimfiles/bundle')
"
"Plug 'mattn/emmet-vim'
"
"call plug#end()

"------------------



source $VIMRUNTIME/vimrc_example.vim

source $VIMRUNTIME/mswin.vim

"不生成备份

behave mswin

"------------------------------

"SET

"---

let mapleader="-"

set encoding=utf-8               "设置默认编码方式"

set fileencoding=utf-8

set fileencodings=ucs-bom,utf-8,cp936,gb18030,big5,latin1

"language messages zh_CN.utf-8       "解决控制台乱码windows 系统默认utf-8"

"set backspace=indent,eol,start      ""

set viminfo='1000,f1,<500

set noundofile

set nobackup

set noswapfile

set backspace=2                     "设置backspace可用"

set autoindent                      "自动缩进"

set smartindent                     "智能缩进"

set tabstop=4                       "tab键宽度"

set shiftwidth=4                    "换行时自动缩进宽度"

set autoread                        "外文件修改时自动重载"

set incsearch                       "搜索实时匹配"

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"MAP

"""

nmap <F2> :Rename<Space>
nmap <tab> :tabn<CR>
nmap <Leader>t :tabedit<Space>
nmap <F10> :w!<CR>
imap <F10> <Esc>:w!<CR>
nmap ; :
nmap <Leader>v :tabnew ~/.vimrc<CR>
nmap <Leader>s :source ~/.vimrc<CR>
nmap <Leader>n :NERDTreeToggle<CR>
nmap <F8> :TagbarToggle<CR>
nmap <Leader>z ZZ<CR>
nmap <Leader>q ZQ<CR>
nmap -- :w!<CR>
imap -- <Esc>:w!<CR>
"-------------------------------
"nmap <F5> <Esc>:!javac %<CR>
"nmap <F6> <Esc>:!java %<<CR>

" --------------------------------------------

" 自动切换目录为当前编辑文件所在目录

au BufRead,BufNewFile,BufEnter * cd %:p:h

"------------------------

"powerline

"----------------

set laststatus=2

"let g:Powerline_symbols = 'unicode'

"---------------------------------

"emmet

"------------------

let g:user_emmet_install_global = 0

"autocmd FileType html,css EmmetInstall



"## Redefine trigger key

"To remap the default `<C-Y>` leader:

let g:user_emmet_expandabbr_key='<Leader>e'

"---------------------------------------------

"neocomplcache

"------------------

let g:neocomplcache_enable_at_startup = 1     "vim 启动时启用插件

"-------------------------------------

"ultisnips

"-------

let g:UltiSnipsExpandTrigger="<tab>"

let g:UltiSnipsJumpForwardTrigger="<c-b>"

let g:UltiSnipsJumpBackwardTrigger="<c-z>"

"-----------------------------------------------------------

"molokai# Molokai Color Scheme for Vim

"----------

"let g:molokai_original = 1

"let g:rehash256 = 1

"--------------------------------------------------------------

let g:airline_powerline_fonts = 1

"关闭tabline

let g:airline#extensions#tabline#enabled = 0

let g:airline#extensions#tabline#buffer_nr_show = 1

if !exists('g:airline_symbols')

  let g:airline_symbols = {}

endif

"powerline symbols

let g:airline_left_sep = ' '

let g:airline_left_alt_sep = ' '

let g:airline_right_sep = ' '

let g:airline_right_alt_sep = ' '

let g:airline_symbols.branch = ' '

let g:airline_symbols.readonly = ' '

let g:airline_symbols.linenr = ' '


"--------------------	

"indentline

"---------------------

let g:indentLine_char = "┊"

let g:indentLine_first_char = "┊"

"-----------------------------------------------------------------------------
autocmd BufNewFile *.cpp,*.[ch],*.sh,*.java,*.php,*.html exec ":call SetTitle()" 
""定义函数SetTitle，自动插入文件头 
func SetTitle() 
"如果文件类型为.sh文件 
if &filetype == 'sh' 
call setline(1,"\#########################################################################") 
call append(line("."), "\# File Name: ".expand("%")) 
call append(line(".")+1, "\# Author: myyu") 
call append(line(".")+2, "\# mail: ym163j@163.com") 
call append(line(".")+3, "\# Created Time: ".strftime("%c")) 
call append(line(".")+4, "\#########################################################################") 
call append(line(".")+5, "\#!/bin/bash") 
call append(line(".")+6, "") 
else 
call setline(1, "/*************************************************************************") 
call append(line("."), " > File Name: ".expand("%")) 
call append(line(".")+1, " > Author: myyu") 
call append(line(".")+2, " > Mail: ym163j@163.com ") 
call append(line(".")+3, " > Created Time: ".strftime("%c")) 
call append(line(".")+4, " ************************************************************************/") 
call append(line(".")+5, "")
endif
if &filetype == 'cpp'
call append(line(".")+6, "#include<iostream>")
call append(line(".")+7, "using namespace std;")
call append(line(".")+8, "")
endif
if &filetype == 'c'
call append(line(".")+6, "#include<stdio.h>")
call append(line(".")+7, "")
endif
"新建文件后，自动定位到文件末尾
autocmd BufNewFile * normal G
endfunc

